aliases:
  docker: &docker
    docker:
      - image: heydovetail/node:node-9.4-yarn-1.5.1-npm-5.6.0-awscli-1.15.3

  restore_node_modules: &restore_node_modules
    restore_cache:
      name: Restore node_modules cache
      keys:
        - node-modules-{{ checksum "yarn.lock" }}

  install_node_modules: &install_node_modules
    run:
      name: Install node modules
      command: |
        yarn

  cache_node_modules: &cache_node_modules
    save_cache:
      name: Save node modules cache
      key: node-modules-{{ checksum "yarn.lock" }}
      paths:
        - node_modules

  deploy: &deploy
    run:
      name: Deploy
      command: |
        aws s3 sync --acl public-read --sse --delete public/ s3://${S3_BUCKET_NAME}
        aws configure set preview.cloudfront true
        aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} --paths '/*'

version: 2
jobs:
  build_and_deploy_prod:
    <<: *docker
    steps:
      - checkout
      - <<: *restore_node_modules
      - <<: *install_node_modules
      - <<: *cache_node_modules
      - run: yarn build
      - run:
          name: Configure deployment
          command: |
            export AWS_ACCESS_KEY_ID=$STAGING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$STAGING_AWS_SECRET_ACCESS_KEY
            export CLOUDFRONT_DISTRIBUTION_ID=$STAGING_CLOUDFRONT_DISTRIBUTION_ID
            export S3_BUCKET_NAME=$STAGING_S3_BUCKET_NAME
      - <<: *deploy

  build_and_test_deploy_stg:
    <<: *docker
    steps:
      - checkout
      - <<: *restore_node_modules
      - <<: *install_node_modules
      - <<: *cache_node_modules
      - run: yarn build
      - run: yarn test
      - run:
          name: Configure deployment
          command: |
            export AWS_ACCESS_KEY_ID=$PRODUCTION_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$PRODUCTION_AWS_SECRET_ACCESS_KEY
            export CLOUDFRONT_DISTRIBUTION_ID=$PRODUCTION_CLOUDFRONT_DISTRIBUTION_ID
            export S3_BUCKET_NAME=$PRODUCTION_S3_BUCKET_NAME
      - <<: *deploy

  build_and_test:
    <<: *docker
    steps:
      - checkout
      - <<: *restore_node_modules
      - <<: *install_node_modules
      - <<: *cache_node_modules
      - run: yarn build
      - run: yarn test

workflows:
  version: 2

  master_branch:
    jobs:
      - build_and_test_deploy_stg:
          filters:
            branches:
              only:
                - master

  deploy_production_branch:
    jobs:
      - build_and_deploy_prod:
          filters:
            branches:
              only:
                - deploy/production

  other_branches:
    jobs:
      - build_and_test:
          filters:
            branches:
              ignore:
                - /deploy\/.+/
                - master

