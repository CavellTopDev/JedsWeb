aliases:
  docker: &docker
    docker:
      - image: heydovetail/node:node-9.4-yarn-1.5.1-npm-5.6.0-awscli-1.15.3

  restore_node_modules: &restore_node_modules
    restore_cache:
      name: Restore node_modules cache
      keys:
        - node-modules-{{ checksum "yarn.lock" }}

  install_node_modules: &install_node_modules
    run:
      name: Install node modules
      command: |
        yarn

  cache_node_modules: &cache_node_modules
    save_cache:
      name: Save node modules cache
      key: node-modules-{{ checksum "yarn.lock" }}
      paths:
        - node_modules

version: 2
jobs:
  build:
    <<: *docker
    steps:
      - checkout
      - <<: *restore_node_modules
      - <<: *install_node_modules
      - <<: *cache_node_modules
      - run: yarn run build
      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    <<: *docker
    steps:
      - attach_workspace
      - run: yarn test

  deploy:
    <<: *docker
    steps:
      - attach_workspace
      - run:
          name: Deploy
          command: |
            # See https://discuss.circleci.com/t/reference-an-environment-variable-in-environment-yaml-map/10792/3
            export AWS_ACCESS_KEY_ID=$(eval ${AWS_ACCESS_KEY_ID_VAR})
            export AWS_SECRET_ACCESS_KEY=$(eval ${AWS_SECRET_ACCESS_KEY_VAR})
            export CLOUDFRONT_DISTRIBUTION_ID=$(eval ${CLOUDFRONT_DISTRIBUTION_ID_VAR})
            export S3_BUCKET_NAME=$(eval ${S3_BUCKET_NAME_VAR})

            aws s3 sync --acl public-read --sse --delete public/ s3://${S3_BUCKET_NAME}
            aws configure set preview.cloudfront true
            aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} --paths '/*'

workflows:
  version: 2

  master_branch:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          environment:
            AWS_ACCESS_KEY_ID_VAR: $STAGING_AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY_VAR: $STAGING_AWS_SECRET_ACCESS_KEY
            CLOUDFRONT_DISTRIBUTION_ID_VAR: $STAGING_CLOUDFRONT_DISTRIBUTION_ID
            S3_BUCKET_NAME_VAR: $STAGING_S3_BUCKET_NAME

  deploy_production_branch:
    jobs:
      - build:
          filters:
            branches:
              only:
                - deploy/production
      - deploy:
          requires:
            - build
          environment:
            AWS_ACCESS_KEY_ID_VAR: $PRODUCTION_AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY_VAR: $PRODUCTION_AWS_SECRET_ACCESS_KEY
            CLOUDFRONT_DISTRIBUTION_ID_VAR: $PRODUCTION_CLOUDFRONT_DISTRIBUTION_ID
            S3_BUCKET_NAME_VAR: $PRODUCTION_S3_BUCKET_NAME

  other_branches:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - /deploy\/.+/
                - master
      - test:
          requires:
            - build

